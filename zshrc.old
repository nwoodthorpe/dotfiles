#!/usr/bin/zsh

# oh-my-zsh configuration {{{

# base config {{{

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Prompt Theme
ZSH_THEME="robbyrussell"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="dd/mm/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
plugins=(
    # Alias suggestion
    alias-tips

    # Autoload .env file on entering folder and unload on exit
    #autoenv

    # Bundle of aliases
    common-aliases

    # Git stuffs
    git git-extras gitfast

    # history traceback
    history

    # Colorize mysql table
    mysql-colorize

    # Python aliases
    python

    # Double esc key for sudo trigger
    sudo

    # vi mode
    #vi-mode

    # virtualenv prompt for prompt theme
    virtualenv-prompt

    # Highlight syntax on command
    zsh-syntax-highlighting
)

# }}}

# Plugin Environments {{{
export ZSH_PLUGINS_ALIAS_TIPS_TEXT="Just this short is enough: "

# enhancd
#source $ZSH/custom/plugins/enhancd/enhancd.sh

ENHANCD_FILTER="fzf"
FZF_DEFAULT_OPTS="--reverse --inline-info --prompt=\"» \""
FZF_TMUX=0
export ENHANCD_FILTER FZF_DEFAULT_OPTS FZF_TMUX

# zsh-syntax-highligher
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# }}}

# Init plugins
source $ZSH/oh-my-zsh.sh

source $HOME/.profile

# Override Plugin Configurations {{{

# zsh-syntax-highlighter {{{

# main
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=043,bold'
ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[precommand]='fg=208,bold'

ZSH_HIGHLIGHT_STYLES[alias]='fg=086,bold'
ZSH_HIGHLIGHT_STYLES[function]='fg=086,bold'

ZSH_HIGHLIGHT_STYLES[builtin]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[command]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=magenta,bold'

ZSH_HIGHLIGHT_STYLES[path]='fg=043,bold'
ZSH_HIGHLIGHT_STYLES[path_prefix]='fg=198,bold'

ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=135'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=135,bold'

ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=220'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=yellow,bold'

ZSH_HIGHLIGHT_STYLES[dollar-quoted-option]='fg=210,bold'
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-option]='fg=210,bold'
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]='fg=208,bold'

ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]='fg=cyan,bg=black'
ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]='fg=cyan,bg=black'

ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=198,bold'
ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=cyan,bold'
ZSH_HIGHLIGHT_STYLES[assign]='fg=144,bold'
ZSH_HIGHLIGHT_STYLES[redirection]='fg=magenta,bold'
ZSH_HIGHLIGHT_STYLES[comment]='fg=008'

# bracket
ZSH_HIGHLIGHT_STYLES[bracket-error]='fg=198,bold'

# }}}

# }}}

# End oh-my-zsh configuration }}}

# Common settings {{{

# Shell initiation
autoload -Uz compinit
compinit

# Preventing duplicate lines in the history
setopt HIST_IGNORE_DUPS

# Fuzzy-search
source /usr/share/fzf/key-bindings.zsh

# Disable shell freeze
stty -ixon

# Override PATH
typeset -U path
path=($HOME/.local/bin $path[@] $HOME/.local/lib)

# Language Environment
# export LANG=en_US.UTF-8

# Editor
export EDITOR='vim'

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Default terminal
export TERM="rxvt-unicode-256color"

# Grep color
export GREP_COLOR='1;32'

# CNF HOOK
source /usr/share/doc/pkgfile/command-not-found.zsh

# grep issue
alias grep="/usr/bin/grep $GREP_OPTIONS --color=auto"
unset GREP_OPTIONS

# Freeze shell when launching ncurse applications
ttyctl -f

# `less` color
export LESS=-R
export LESS_TERMCAP_me=$(printf '\e[0m')
export LESS_TERMCAP_se=$(printf '\e[0m')
export LESS_TERMCAP_ue=$(printf '\e[0m')
export LESS_TERMCAP_mb=$(printf '\e[1;32m')
export LESS_TERMCAP_md=$(printf '\e[1;34m')
export LESS_TERMCAP_us=$(printf '\e[1;32m')
export LESS_TERMCAP_so=$(printf '\e[1;44;1m')

export LESSOPEN="| /usr/bin/source-highlight-esc.sh %s"
export LESS='-R '

# bus issues
NO_AT_BRIDGE=1

# VI mode esc key timeout
export KEYTIMEOUT=1

# Input method

#fcitx-unikey
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx

# }}}

# Aliases {{{
#alias -g less='/usr/share/vim/vim74/macros/less.sh'
alias copy="xclip -selection c"
#alias cnf="pkgfile"
alias restart-tty1="sudo systemctl restart getty@tty1.service"
alias restart-tty2="sudo systemctl restart getty@tty2.service"
alias restart-tty3="sudo systemctl restart getty@tty3.service"
alias restart-tty4="sudo systemctl restart getty@tty4.service"
alias restart-tty5="sudo systemctl restart getty@tty5.service"
alias restart-tty6="sudo systemctl restart getty@tty6.service"
alias sysreboot="systemctl reboot"
alias syspoweroff="systemctl poweroff"

alias pacunlock="sudo rm /var/lib/pacman/db.lck"   # Delete the lock file
alias paclock="sudo touch /var/lib/pacman/db.lck"  # Create the lock file

alias open='xdg-open'
alias mkdir='mkdir -p -v'
alias mv='mv -iv'
alias rm='rm -Iv --one-file-system'
alias rename='rename -v'
alias maketags='ctags -R'
#alias view="~/Path/viewf"
alias view='$EDITOR -R'
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"
alias tn="tmux new-session"
alias mkdate='mkdir "$(date +"%Y-%m-%d_%H:%M:%S")"'
#alias vim=
alias reload="exec /bin/zsh"



alias mpc="mpc --host XHv1OqE6Yy1oZbF5@localhost --port 2856"
#alias fzf="fzf --reverse"
alias tree="tree -C"

alias sysuser="systemctl --user"
alias lsblk="lsblk -oNAME,SIZE,OWNER,GROUP,MODE,FSTYPE,LABEL,MOUNTPOINT,PARTUUID"

alias tmuxconf="$EDITOR ~/.tmux.conf"
alias vimrc="$EDITOR ~/.vimrc"
alias bspwmrc="$EDITOR ~/.config/bspwm/bspwmrc"
alias sxhkdrc="$EDITOR ~/.config/sxhkd/sxhkdrc"

alias check-ipv4="curl ipv4.icanhazip.com"
alias check-ipv6="curl ipv6.icanhazip.com"

alias dd="false"  # btrfs caution

unalias g
unalias _
unalias please

# }}}

# Keyboard mapping {{{

# Enable home/end/ins/del/... keys {{{
# create a zkbd compatible hash
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"     ]]  && bindkey  "${key[Home]}"     beginning-of-line
[[ -n "${key[End]}"      ]]  && bindkey  "${key[End]}"      end-of-line
[[ -n "${key[Insert]}"   ]]  && bindkey  "${key[Insert]}"   overwrite-mode
[[ -n "${key[Delete]}"   ]]  && bindkey  "${key[Delete]}"   delete-char
[[ -n "${key[Up]}"       ]]  && bindkey  "${key[Up]}"       up-line-or-history
[[ -n "${key[Down]}"     ]]  && bindkey  "${key[Down]}"     down-line-or-history
[[ -n "${key[Left]}"     ]]  && bindkey  "${key[Left]}"     backward-char
[[ -n "${key[Right]}"    ]]  && bindkey  "${key[Right]}"    forward-char
[[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"   beginning-of-buffer-or-history
[[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}" end-of-buffer-or-history

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        printf '%s' "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

# }}}

# Enable edit commandline in editor {{{
autoload -U edit-command-line
zle -N edit-command-line

bindkey '^E' edit-command-line
# }}}

# }}}

# Bind key to ncurses application {{{
# Bind a ncurses application to a keystoke, but it will not accept interaction.
# Use BUFFER variable to make it work.

_ncmpcppShow() {
    BUFFER="ncmpcpp"
    zle accept-line
}

_rangerShow() {
    BUFFER="ranger"
    zle accept-line
}

_htopShow() {
    BUFFER="htop"
    zle accept-line
}

_glancesShow() {
    BUFFER="glances"
    zle accept-line
}

#_ncduShow() {
    #BUFFER="ncdu --si"
    #zle accept-line
#}

_cdUndoKey() {
  popd > /dev/null
  zle reset-prompt
  echo
}

_cdParentKey() {
  pushd .. > /dev/null
  zle reset-prompt
  echo
}

zle -N _ncmpcppShow
zle -N _rangerShow
zle -N _htopShow
zle -N _glancesShow
#zle -N _ncduShow
zle -N _cdParentKey
zle -N _cdUndoKey

bindkey '^[\' _ncmpcppShow # alt + \
bindkey '^[]' _rangerShow  # alt + ]
#bindkey '^[[' _ncduShow    # alt + [
bindkey '^[=' _glancesShow # alt + =
bindkey '^[k' _cdParentKey # alt + k
bindkey '^[h' _cdUndoKey   # alt + h

# }}}

# Custom functions {{{

# Print out 2 sets of 256 colors for terminals {{{
function clicolors() {
    local i c color

    i=1
    c=""
    for color in {000..255}; do
        c=$c"$FG[$color]$color✔ ";
        if [ `expr $i % 16` -eq 0 ]; then
            c=$c"\n"
        fi
        i=`expr $i + 1`
    done;

    c=$c"\n"

    for color in {000..255}; do
        c=$c"$bold_color$FG[$color]$color✔ ";
        if [ `expr $i % 16` -eq 0 ]; then
            c=$c"\n"
        fi
        i=`expr $i + 1`
    done;

    echo $c | sed 's/%//g' | sed 's/{//g' | sed 's/}//g' | sed '$s/..$//';
}
# }}}

# }}}

# mysql prompt {{{
export MYSQL_PS1='\u@\h [\d] ~> '
#MYSQL_PS1='\033]0;MySQL \h:\p (\d)\007\e[0;31m\h\e[0m (\p)\n\d> '
#MYSQL_PS1=`echo -e "$MYSQL_PS1"`
#export MYSQL_PS1
# }}}

